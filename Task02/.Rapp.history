?list.files
args()
args(list.files())
args(list.files)
old.dir <- list.files
old.dir <- getwd()
dir.create(testdir)
dir.create("testdir")
setwd("testdir")
file.create("mytest.R")
list.files()
file.exists("mytest.R")
file.info("mytest.R")
file.rename("mytest.R", "mytest2.R")
file.copy("mytest2.R", "mytest3.R")
file.path("mytest3.R")
file.path('folder1', 'folder2')
?dir.create
dir.create(file.path('testdir2', 'testdir3'), recursive = TRUE)
setwd(old.dir)
1:20
pi:10
15:1
?`:`
seq(1, 20)
seq(0, 10, by=0.5)
my_seq <- seq(5, 10, length=30)
length(my_seq)
1:length(my_seq)
seq(along.with = my_seq)
seq_along(my_seq)
rep(0, times = 40)
rep(c(0, 1, 2) times = 10)
rep(c(0, 1, 2), times = 10)
rep(c(0, 1, 2), each = 10)
x <- c(44, NA, 5, NA)
rep(x, by 3)
x*3
y <- rnorm(1000)
z <- rep(NA, 1000)
my_data <- sample(c(y, z), 100)
my_na <- is.na(my_data)
my_na
my_data == NA
sum(my_na)
my_data
0/0
Inf-Inf
x
x[1:10]
x[is.na(x)]
y <- x[!is.na(x)]
y
y[y > 0]
x[x > 0]
x[!is.na(x) & x > 0]
x[c(3, 5, 7)]
x[0]
x[3000]
x[c(-2, -10)]
x[-c(2, 10)]
vect <- c(foo = 11, bar = 2, norf = NA)
vect
names(vect)
vect2 <- c(11, 2, NA)
names(vect2) <- c("foo", "bar", "norf")
identical(vect, vect2)
vect["bar"]
vect[c("foo", "bar")]
my_vector <- 1:20
my_vector
dim(my_vector)
length(my_vector)
dim(my_vector) <- c(4, 5)
dim(my_vector)
attributes(my_vector)
my_vector
class(my_vector)
my_matrix <- my_vector
?matrix()
?matrix
my_matrix2 <- matrix(data = 1:20, nrow = 4, ncol = 5)
identical(my_matrix, my_matrix2)
patients <- names("Bill", "Gina", "Kelly", "Sean")
patients <- ("Bill", "Gina", "Kelly", "Sean")
patients <- "Bill", "Gina", "Kelly", "Sean"
patients <- "Bill" "Gina" "Kelly" "Sean"
patients <- c("Bill", "Gina", "Kelly", "Sean")
cbind(patients, my_matrix)
my_data <- data.frame(patients, my_matrix)
my_data
class(my_data)
cnames <- c("patient," "age", "weight", "bp", "rating", "test")
cnames <- c("patient", "age", "weight", "bp", "rating", "test")
colnames(cnames)
colnames(my_data) <- cnames
my_data
TRUE == TRUE
(FALSE == TRUE) == FALSE
6 == 7
6 < 7
10 <= 10
5 != 7
!5 == 7
FALSE & FALSE
TRUE & c(TRUE, FALSE, FALSE)
TRUE && c(TRUE, FALSE, FALSE)
TRUE | c(TRUE, FALSE, FALSE)
TRUE || c(TRUE, FALSE, FALSE)
5 > 8 || 6 != 8 && 4 > 3.9
isTRUE(6>4)
identical('twins', 'twins')
xor(5==6, !FALSE)
ints <- sample(10)
ints
ints > 5
which(ints > 7)
any(ints < 0)
all(ints > 0)
Sys.Date()
mean(c(2, 4, 5))
submit()
boring_function('My first function!')
boring_function
submit()
my_mean(c(4, 5, 10))
submit()
remainder(5)
remainder(11, 5)
remainder(divisor = 11, num = 5)
remainder(4, div -2)
remainder(4, div = 2)
args(remainder)
submit()
evaluate(c(1.4, 3.6, 7.9, 8.8))
evaluate(func(c(1.4, 3.6, 7.9, 8.8)))
evaluate(sd(c(1.4, 3.6, 7.9, 8.8)))
evaluate(sd, c(1.4, 3.6, 7.9, 8.8))
evaluate(function(x){x+1}, 6)
evaluate(function(x)c(8, 4, 0))
evaluate(function(x){x+1}, c(8, 4, 0))
evaluate(function(x){x[1]}, c(8, 4, 0))
evaluate(function(x){x[length(x)]}, c(8, 4, 0))
?paste
paste("Programming", "is", "fun!")
submit()
telegram(c("Hello", "everyone"))
submit()
mad_libs(place = "Lewisburg", adjective = "fun", noun = "school")
submit()
"I" %p% "love" %p% "R!"
data(cars)
?cars
head(cars)
plot(cars)
?plot
plot(x= cars$speed, y= cars$dist)
plot(x = cars$dist, y = cars$speed)
plot(x = cars$speed, y = cars$dist, xlab = "Speed")
plot(x = cars$speed, y = cars$dist, ylab = "Stopping Distance")
plot(x = cars$speed, y = cars$dist, xlab = "Speed", ylab = "Stopping Distance")
plot(cars, main = "My Plot")
plot(cars, sub = "My Plot Subtitle")
plot(cars, col=2)
plot(cars, xlim= c(10, 15))
plot(cars, pch =2)
data(mtcars)
?boxplot
boxplot(formula = mpg ~ cyl, data = mtcars)
hist(mtcars$mpg)
Naps <- which(beren3$event == "nap")
Naps <- which(beren3$event == "nap")#
beren4 <- beren3[Naps,]#
head(beren4)
Naps <- which(beren3$event == "nap")#
beren4 <- beren3[Naps,]#
head(beren4)#
beren4[5:6]#
beren4[7:8]
setwd(~/Desktop/Evolution/Tasks/Task02)#
Data <- read.csv("http://jonsmitchell.com/data/beren.csv", stringsAsFactors=F)#
length(Data)#
nrow(Data)#
ncol(Data)#
colnames(Data)#
head(Data)#
Data[1,]#
Data[2,]#
Data[1:3,]#
Data[1:3, 4]#
Data[1:5, 1:3]#
Feeds <- which(Data[,9] == "bottle")#
berenMilk <- Data[Feeds,]#
head(berenMilk)#
Feeds <- which(Data[,"event"] == "bottle")#
Feeds <- which(Data$event == "bottle")#
dayID <- apply(Data, 1, function(x) paste(x[1:3], collapse="-"))#
dateID <- sapply(dayID, as.Date, format = "%Y-%m-%d", origin = "2019-04-18")#
Data$age <- dateID - dateID [which(Data$event == "birth")]#
head(Data)#
beren2 <- Data#
beren3 <- beren2[order(beren2$age),]#
write.csv(beren3, "beren_new.csv", quote=F, row.names=FALSE)#
Feeds <- which(beren3$event == "bottle")#
avgMilk <- mean(beren3$value[Feeds])#
avgFeed <- tapply(beren3$value[Feeds], beren3$age[Feeds], mean)#
varFeed <- tapply(beren3$value[Feeds], beren3$age[Feeds], var)#
totalFeed <- tapply(beren3$value[Feeds], beren3$age[Feeds], sum)#
numFeeds <- tapply(beren3$value[Feeds], beren3$age[Feeds], length)#
cor(beren3$value[Feeds], beren3$age[Feeds])#
cor.test(beren3$value[Feeds], beren3$age[Feeds])#
berenCor <- cor.test(beren3$value[Feeds], beren3$age[Feeds])#
summary(berenCor)#
berenANOVA <- aov(beren3$value[Feeds] ~ beren3$caregiver[Feeds])#
boxplot(beren3$value[Feeds] ~ beren3$caregiver[Feeds], xlab= "who gave the bottle", ylab = "amount of milk consumed (oz)")#
?par#
par(las=1, mar=c(5, 5, 1, 1), mgp=c(2, 0.5, 0), tck=-0.01)#
plot(as.numeric(names(totalFeed)), totalFeed, type="b", pch=16, xlab="age in days", ylab="ounces of milk")#
abline(h=avgFeed, lty=2, col='red')#
pdf("r02b-totalMilkByDay.pdf", height = 4, width = 4)#
par(las=1, mar=c(5, 5, 1, 1), mgp=c(2, 0.5, 0), tck=-0.01)#
plot(as.numeric(names(totalFeed)), totalFeed, type="b", pch=16, xlab="age in days", ylab="ounces of milk")#
abline(h=mean(totalFeed), lty=2, col='red')#
#
Naps <- which(beren3$event == "nap")#
beren4 <- beren3[Naps,]#
head(beren4)#
beren4[5:6]#
beren4[7:8]#
beren4$end_minute <- beren4$end_minute / 60#
beren4$start_minute <- beren4$start_minute / 60#
beren4$napstart <- beren4$start_hour + beren4$start_minute#
beren4$napend <- beren4$end_hour + beren4$end_minute#
beren4$naplength <- beren4$napend - beren4$napstart#
naptime <- tapply(beren4$naplength[Naps], beren4$age [Naps], sum)#
par(las=1, mar=c(5,5,1,1), mgp=c(2, 0.5 ,0), tck=-.01) #
plot(as.numeric(names(naptime)), naptime, type="b", pch=16, xlab="day", ylab="naptime")#
cor.test(beren4$age, naptime)
cor.test(beren4$age, naplength)
Naps <- which(beren3$event == "nap")#
beren4 <- beren3[Naps,]#
head(beren4)#
beren4[5:6]#
beren4[7:8]beren4$end_minute <- beren4$end_minute / 60#
beren4$start_minute <- beren4$start_minute / 60#
beren4$napstart <- beren4$start_hour + beren4$start_minute#
beren4$napend <- beren4$end_hour + beren4$end_minute#
beren4$naplength <- beren4$napend - beren4$napstart#
naptime <- tapply(beren4$day[Naps], beren4$age [Naps], sum)#
par(las=1, mar=c(5,5,1,1), mgp=c(2, 0.5 ,0), tck=-.01) #
plot(as.numeric(names(naptime)), naptime, type="b", pch=16, xlab="day", ylab="naptime")#
cor.test(beren4$age, naptime)
Naps <- which(beren3$event == "nap")#
beren4 <- beren3[Naps,]#
head(beren4)#
beren4[5:6]#
beren4[7:8]#
beren4$end_minute <- beren4$end_minute / 60#
beren4$start_minute <- beren4$start_minute / 60#
beren4$napstart <- beren4$start_hour + beren4$start_minute#
beren4$napend <- beren4$end_hour + beren4$end_minute#
beren4$naplength <- beren4$napend - beren4$napstart#
naptime <- tapply(beren4$day[Naps], beren4$age [Naps], sum)#
par(las=1, mar=c(5,5,1,1), mgp=c(2, 0.5 ,0), tck=-.01) #
plot(as.numeric(names(naptime)), naptime, type="b", pch=16, xlab="day", ylab="naptime")#
cor.test(beren4$age, naptime)
setwd()#
beren3 <- read.csv()#
#
# subset by naps#
Naps <- which(beren3$event == "nap")#
beren4 <- beren3[Naps,]#
head(beren4)#
#
beren4$end_minute <- beren4$end_minute / 60#
beren4$start_minute <- beren4$start_minute / 60#
beren4$napstart <- beren4$start_hour + beren4$start_minute#
beren4$napend <- beren4$end_hour + beren4$end_minute#
beren4$naplength <- beren4$napend - beren4$napstart#
#
naptime <- tapply(beren4$naptime, beren4$age, sum, na.rm=T)#
#
par(las=1, mar=c(5,5,1,1), mgp=c(2, 0.5 ,0), tck=-.01) #
plot(as.numeric(names(naptime)), naptime, type="b", pch=16, xlab="day", ylab="naptime")#
cor.test(beren4$age, naptime)
setwd(~/Desktop/Evolution/Tasks/Task02)#
beren3 <- read.csv("http://jonsmitchell.com/data/beren.csv", stringsAsFactors=F)#
#
# subset by naps#
Naps <- which(beren3$event == "nap")#
beren4 <- beren3[Naps,]#
head(beren4)#
#
beren4$end_minute <- beren4$end_minute / 60#
beren4$start_minute <- beren4$start_minute / 60#
beren4$napstart <- beren4$start_hour + beren4$start_minute#
beren4$napend <- beren4$end_hour + beren4$end_minute#
beren4$naplength <- beren4$napend - beren4$napstart#
#
naptime <- tapply(beren4$naptime, beren4$age, sum, na.rm=T)#
#
par(las=1, mar=c(5,5,1,1), mgp=c(2, 0.5 ,0), tck=-.01) #
plot(as.numeric(names(naptime)), naptime, type="b", pch=16, xlab="day", ylab="naptime")#
cor.test(beren4$age, naptime)
setwd(~/Desktop/Evolution/Tasks/Task02)#
beren3 <- read.csv("beren_new.csv", stringsAsFactors=F)#
# subset by naps#
Naps <- which(beren3$event == "nap")#
beren4 <- beren3[Naps,]#
head(beren4)#
#
beren4$end_minute <- beren4$end_minute / 60#
beren4$start_minute <- beren4$start_minute / 60#
beren4$napstart <- beren4$start_hour + beren4$start_minute#
beren4$napend <- beren4$end_hour + beren4$end_minute#
beren4$naplength <- beren4$napend - beren4$napstart#
#
naptime <- tapply(beren4$naptime, beren4$age, sum, na.rm=T)#
#
par(las=1, mar=c(5,5,1,1), mgp=c(2, 0.5 ,0), tck=-.01) #
plot(as.numeric(names(naptime)), naptime, type="b", pch=16, xlab="day", ylab="naptime")#
cor.test(beren4$age, naplength)
setwd(~Desktop/Evolution/Tasks/Task02)#
beren3 <- read.csv("beren_new.csv", stringsAsFactors=F)#
# subset by naps#
Naps <- which(beren3$event == "nap")#
beren4 <- beren3[Naps,]#
head(beren4)#
#
beren4$end_minute <- beren4$end_minute / 60#
beren4$start_minute <- beren4$start_minute / 60#
beren4$napstart <- beren4$start_hour + beren4$start_minute#
beren4$napend <- beren4$end_hour + beren4$end_minute#
beren4$naplength <- beren4$napend - beren4$napstart#
#
naptime <- tapply(beren4$naptime, beren4$age, sum, na.rm=T)#
#
par(las=1, mar=c(5,5,1,1), mgp=c(2, 0.5 ,0), tck=-.01) #
plot(as.numeric(names(naptime)), naptime, type="b", pch=16, xlab="day", ylab="naptime")#
cor.test(beren4$age, naplength)
setwd(~Desktop/Evolution/Tasks/Task02)
?setwd
setwd(~/Desktop/Evolution/Tasks/Task02)#
beren3 <- read.csv("beren_new.csv", stringsAsFactors=F)#
#
Naps <- which(beren3$event == "nap")#
beren4 <- beren3[Naps,]#
head(beren4)#
#
##
beren4$end_minute <- beren4$end_minute / 60#
beren4$start_minute <- beren4$start_minute / 60#
beren4$napstart <- beren4$start_hour + beren4$start_minute#
beren4$napend <- beren4$end_hour + beren4$end_minute#
beren4$naplength <- beren4$napend - beren4$napstart#
#
naptime <- tapply(beren4$naplength, beren4$age, sum, na.rm=T)#
#
##
par(las=1, mar=c(5,5,1,1), mgp=c(2, 0.5 ,0), tck=-.01) #
plot(as.numeric(names(naptime)), naptime, type="b", pch=16, xlab="day", ylab="naptime")#
#
cor.test(beren4$age, naplength)
setwd(~/Desktop/Evolution/Tasks/Task02)#
beren3 <- read.csv("beren_new.csv", stringsAsFactors=F)
# The rate at which Beren grows is speeding up over time#
#
setwd("~/Desktop/Evolution/Tasks/Task02")#
beren3 <- read.csv("beren_new.csv", stringsAsFactors=F)#
#
Growth <- which(beren3$event == "trait_mass")
cor(beren3$[Growth], beren3$age[Growth])
cor(beren3$Growth, beren3$age[Growth])
cor(Growth, beren3$age[Growth])
par(las=1, mar=c(5, 4, 4, 2), mgp=c(3, 1, 0), tck =-0.01)
par(las=1, mar=c(5, 5, 1, 1), mgp=c(2, 0.5, 0), tck =-0.01)
plot(as.numeric(names(Growth~beren3$age[Growth])), type="b", pch=16, xlab="age in days", ylab="mass in kg")
plot(as.numeric(names(Growth~beren3$age[Growth])), type="b", pch=16, xlab="age in days", ylab="mass in kg", xlim=c(4, 10))
plot(as.numeric(names(Growth~beren3$age[Growth])), type="b", pch=16, xlab="age in days", ylab="mass in kg", xlim=c(0, 218), ylim=c(4, 10))
head(Growth)
tail(Growth)
head(beren3$age)
tail(beren3$age)
head(beren3$age[Growth])#
tail(beren3$age[Growth])
plot(as.numeric(names(Growth~beren3$age)), type="b", pch=16, xlab="age in days", ylab="mass in kg", xlim=c(0, 218), ylim=c(4, 10))
plot(as.numeric(names(beren3$value[Growth]~beren3$age[Growth])), type="b", pch=16, xlab="age in days", ylab="mass in kg", xlim=c(0, 218), ylim=c(4, 10))
Weight <- which(beren3$value[Growth])
beren3$value[Growth]
plot(as.numeric(names(beren3$value[Growth], beren3$age[Growth])), type="b", pch=16, xlab="age in days", ylab="mass in kg", xlim=c(0, 218), ylim=c(4, 10))
# The rate at which Beren grows is speeding up over time#
#
setwd("~/Desktop/Evolution/Tasks/Task02")#
beren3 <- read.csv("beren_new.csv", stringsAsFactors=F)#
#
Weight <- which(beren3$event == "trait_mass")#
beren3$value[Weight]#
#
par(las=1, mar=c(5, 5, 1, 1), mgp=c(2, 0.5, 0), tck =-0.01)#
plot(beren3$value[Weight], beren3$age[Weight]), type="p", pch=16, xlab="age in days", ylab="mass in kg", xlim=c(0, 218), ylim=c(4, 10)
plot(beren3$value[Weight], beren3$age[Weight]) type="p", pch=16, xlab="age in days", ylab="mass in kg", xlim=c(0, 218), ylim=c(4, 10)
plot(beren3$value[Weight], beren3$age[Weight])
plot(beren3$value[Weight], beren3$age[Weight]), xlab="age in days", ylab="mass in kg", xlim=c(0, 218), ylim=c(4, 10)
plot(beren3$value[Weight], beren3$age[Weight], type="p", pch=16, xlab="age in days", ylab="mass in kg", xlim=c(0, 218), ylim=c(4, 10))
#I hypothesize that Beren gained weight faster after the introduction of sleeping through the night  #
setwd("~/Desktop/Evolution/Tasks/Task02")#
beren3 <- read.csv("beren_new.csv", stringsAsFactors=F)#
 #naming stuff#
Weight <- which(beren3$event == "trait_mass")#
beren4 <- beren3[Weight,]#
#
#Use which function to the row == the thing#
keyDate <- beren3[grep("sleeping_thru", beren3$event), "age"]#
#use the which() function to find things below and above the sleeping thru date and then the slope #
yDays <- which(beren4$age < keyDate)#
yBeren <- beren4[youngerDays,]#
ySLope <- lm(Weight ~ age, data=yBeren)#
#
#other split IDK what to do for the weight in the slope something isnt right but it might not be necessary anyway#
oDays <- which(beren4$age > keyDate)#
oBeren <- beren4[olderDays,]#
oSlope <- lm ( weight ~ age, data=oBeren)#
#
ys <- summary(ySlope)$coef[2,1:2]#
os <- summary(oSlope)$coef[2, 1:2]
# The rate at which Beren grows is speeding up over time#
#
setwd("~/Desktop/Evolution/Tasks/Task02")#
beren4 <- read.csv("beren_new.csv", stringsAsFactors=F)
Growth <- which(beren4$value == "trait_mass")
par(las=1, mar=c(5, 5, 1, 1), mgp=c(2, 0.5, 0), tck =-0.01)#
plot((Growth~beren4$age)), type="b", pch=16, xlab="age in days", ylab="mass in kg", xlim=c(0, 218), ylim=c(4, 10))
plot(Growth~beren4$age), type="b", pch=16, xlab="age in days", ylab="mass in kg", xlim=c(0, 218), ylim=c(4, 10))
plot(Growth~beren4$age)
plot(Growth~beren4$age[Growth]) type="b", pch=16, xlab="age in days", ylab="mass in kg", xlim=c(0, 218), ylim=c(4, 10))
plot(Growth~beren4$age[Growth]) type="b", pch=16, xlab="age in days", ylab="mass in kg", xlim=c(0, 218), ylim=c(4, 10)
plot(Growth, beren4$age[Growth]) type="b", pch=16, xlab="age in days", ylab="mass in kg", xlim=c(0, 218), ylim=c(4, 10)
plot(Growth ~ beren4$age[Growth], type="b", pch=16, xlab="age in days", ylab="mass in kg", xlim=c(0, 218), ylim=c(4, 10))
plot(beren4$value[Growth] ~ beren4$age[Growth], type="b", pch=16, xlab="age in days", ylab="mass in kg", xlim=c(0, 218), ylim=c(4, 10))
plot(as.numeric(names(beren4$value[Growth] ~ beren4$age[Growth])), type="b", pch=16, xlab="age in days", ylab="mass in kg", xlim=c(0, 218), ylim=c(4, 10))
# The rate at which Beren grows is speeding up over time#
#
setwd("~/Desktop/Evolution/Tasks/Task02")#
beren4 <- read.csv("beren_new.csv", stringsAsFactors=F)#
#
Growth <- which(beren4$value == "trait_mass")#
par(las=1, mar=c(5, 5, 1, 1), mgp=c(2, 0.5, 0), tck =-0.01)#
plot(as.numeric(names(beren4$value[Growth] ~ beren4$age[Growth])), type="b", pch=16, xlab="age in days", ylab="mass in kg", xlim=c(0, 218), ylim=c(4, 10))
# The rate at which Beren grows is speeding up over time#
#
setwd("~/Desktop/Evolution/Tasks/Task02")#
beren4 <- read.csv("beren_new.csv", stringsAsFactors=F)#
#
Weight <- which(beren4$value == "trait_mass")#
plot(beren4$age[Weight], beren4$value[Weight])
par(las=1, mar=c(5, 5, 1, 1), mgp=c(2, 0.5, 0), tck =-0.01)#
plot(beren4$age[Weight], beren4$value[Weight]) type="b", pch=16, xlab="age in days", ylab="mass in kg", xlim=c(0, 218), ylim=c(4, 10))
# The rate at which Beren grows is speeding up over time#
#
setwd("~/Desktop/Evolution/Tasks/Task02")#
beren4 <- read.csv("beren_new.csv", stringsAsFactors=F)#
#
Weight <- which(beren4$value == "trait_mass")
par(las=1, mar=c(5, 5, 1, 1), mgp=c(2, 0.5, 0), tck =-0.01)
plot(beren4$age[Weight], beren4$value[Weight]) xlab="age in days", ylab="mass in kg", xlim=c(0, 218), ylim=c(4, 10)
plot(beren4$age[Weight] ~ beren4$value[Weight]) xlab="age in days", ylab="mass in kg", xlim=c(0, 218), ylim=c(4, 10)
plot(beren4$age[Weight] ~ beren4$value[Weight], xlab="age in days", ylab="mass in kg", xlim=c(0, 218), ylim=c(4, 10))
plot(beren4$age["Weight"] ~ beren4$value["Weight"], xlab="age in days", ylab="mass in kg", xlim=c(0, 218), ylim=c(4, 10))
plot(beren4$age[Weight] ~ beren4$value[Weight], type="p" xlab="age in days", ylab="mass in kg", xlim=c(0, 218), ylim=c(4, 10))
setwd("~/Desktop/Evolution/Tasks/Task02")#
beren4 <- read.csv("beren_new.csv", stringsAsFactors=F)#
#
Weight <- which(beren4$value == "trait_mass")#
Regression <- mls(value ~ p1 / (1 + exp(-(p2+p3 * age))), start=list(p1=100, p2=-1.096, p3=.002), data=beren4, trace=TRUE)#
par(las=1, mar=c(5, 5, 1, 1), mgp=c(2, 0.5, 0), tck =-0.01)#
plot(beren4$age[Weight] ~ beren4$value[Weight], type="p" xlab="age in days", ylab="mass in kg", xlim=c(0, 218), ylim=c(4, 10))
Regression <- nls(value ~ p1 / (1 + exp(-(p2+p3 * age))), start=list(p1=100, p2=-1.096, p3=.002), data=beren4, trace=TRUE)#
par(las=1, mar=c(5, 5, 1, 1), mgp=c(2, 0.5, 0), tck =-0.01)#
plot(beren4$age[Weight] ~ beren4$value[Weight] type="p" xlab="age in days", ylab="mass in kg", xlim=c(0, 218), ylim=c(4, 10))
setwd("~/Desktop/Evolution/Tasks/Task02")#
beren4 <- read.csv("beren_new.csv", stringsAsFactors=F)#
#
Weight <- which(beren4$value == "trait_mass")#
par(las=1, mar=c(5, 5, 1, 1), mgp=c(2, 0.5, 0), tck =-0.01)#
plot(beren4$age[Weight] ~ beren4$value[Weight], type="p" xlab="age in days", ylab="mass in kg", xlim=c(0, 218), ylim=c(4, 10))
plot(beren4$age[Weight] ~ beren4$value[Weight], type="p", xlab="age in days", ylab="mass in kg", xlim=c(0, 218), ylim=c(4, 10))
setwd("~/Desktop/Evolution/Tasks/Task02")#
beren4 <- read.csv("beren_new.csv", stringsAsFactors=F)
head(beren4)
Weight <- which(beren4$value == "trait_mass")
Weight <- which(beren4$event == "trait_mass")
weight[1:4]
Weight[1:4]
par(las=1, mar=c(5, 5, 1, 1), mgp=c(2, 0.5, 0), tck =-0.01)#
plot(beren4$age[Weight] ~ beren4$value[Weight], type="p", xlab="age in days", ylab="mass in kg", xlim=c(0, 218), ylim=c(4, 10))
par(las=1, mar=c(5, 5, 1, 1), mgp=c(2, 0.5, 0), tck =-0.01)#
plot(beren4$age[Weight] ~ beren4$value[Weight], type="p", xlab="age in days", ylab="mass in kg", xlim=c(0, 218))
par(las=1, mar=c(5, 5, 1, 1), mgp=c(2, 0.5, 0), tck =-0.01)#
plot(beren4$age[Weight], beren4$value[Weight], type="p", xlab="age in days", ylab="mass in kg", xlim=c(0, 218))
par(las=1, mar=c(5, 5, 1, 1), mgp=c(2, 0.5, 0), tck =-0.01)#
plot(beren4$age[Weight], beren4$value[Weight], type="p", xlab="age in days", ylab="mass in kg")
pdf("BerenGrowthOverTime.pdf")
par(las=1, mar=c(5, 5, 1, 1), mgp=c(2, 0.5, 0), tck =-0.01)#
plot(beren4$age[Weight], beren4$value[Weight], type="p", xlab="age in days", ylab="mass in kg")
dev.off()
predict()
?predict
